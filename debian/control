Source: zbackup
Section: utils
Priority: extra
Maintainer: Jarl Stefansson <jarl.stefansson@gmail.com>
Build-Depends: debhelper (>= 8.0.0), cmake, libssl-dev, libprotobuf-dev, liblzma-dev, zlib1g-dev, protobuf-compiler, g++
Standards-Version: 3.9.2
Homepage: http://zbackup.org/
Vcs-Git: git://git@github.com:jalli/zbackup.git
Vcs-Browser: https://github.com/jalli/zbackup

Package: zbackup
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: A versatile deduplicating backup tool with strong encryption
 Introduction
 zbackup is a globally-deduplicating backup tool, based on the ideas found in rsync. Feed a large .tar into it, and it will store duplicate regions of it only once, then compress and optionally encrypt the result. Feed another .tar file, and it will also re-use any data found in any previous backups. This way only new changes are stored, and as long as the files are not very different, the amount of storage required is very low. Any of the backup files stored previously can be read back in full at any time. The program is format-agnostic, so you can feed virtually any files to it (any types of archives, proprietary formats, even raw disk images -- but see Caveats).

 This is achieved by sliding a window with a rolling hash over the input at a byte granularity and checking whether the block in focus was ever met already. If a rolling hash matches, an additional full cryptographic hash is calculated to ensure the block is indeed the same. The deduplication happens then.

  The program has the following features:

  Parallel LZMA compression of the stored data
  Built-in AES encryption of the stored data
  Possibility to delete old backup data in the future
  Use of a 64-bit rolling hash, keeping the amount of soft collisions to zero
  Repository consists of immutable files. No existing files are ever modified
  Written in C++ only with only modest library dependencies
